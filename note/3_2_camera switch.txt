//app.js
선택한 카메라로 바뀌도록 셀렉트에 이벤트 등록
camerasSelect.addEventListener("input", handleCameraChange);

선택된 항목의 값을 카메라 호출로 불러줌 : 강제로 카메라 다시 시작하는 것임
async function handleCameraChange() {
    await getMedia(camerasSelect.value);
}

async function getMedia(deviceId) {
    맨 처음 호출 할 때는 (기본캠) 카메라 ID 값이 따로 없으니 초기화 해줌
    const initialConstrains = {
        audio: true,
        video: { facingMode: "user" },
    };
    카메라 바꿀 때 설정을 따로 해줌.
    const cameraConstraints = {
        audio: true,
        video: { deviceId: { exact: deviceId } },
    }
    try {
        myStream = await navigator.mediaDevices.getUserMedia(
            deviceId값 존재 여부에 때라 설정 선택함.
            deviceId ? cameraConstraints : initialConstrains
        )
        myFace.srcObject = myStream;
        카메라 바꿀 때 마다 select 항목이 늘어나면 안됨.
        처음에만 항목 만들어줌.
        if (!deviceId) {
            await getCameras();
        }
    } catch (e) {
        console.log(e);
    }
}

처음 호출함.
getMedia();

처음에 선택된 카메라를 select로 보이도록
//app.js
async function getCameras() {
    try {
        초기에 선택된 카메라 정보 받아옴 : myStream.getVideoTracks()
        const currentCamera = myStream.getVideoTracks()[0];
        cameras.forEach(camera => {
            const option = document.createElement("option");
            카메라 정보중 라벨이 같은 것을 선택되도록.
            if (currentCamera.label == camera.label) {
                option.selected = true;
            }
        });
        ...
    }
}